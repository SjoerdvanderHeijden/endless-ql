# Generated from QL.g4 by ANTLR 4.5.3
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2$")
        buf.write("\u00ef\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\3\2\3\2\3\2")
        buf.write("\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3")
        buf.write("\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3")
        buf.write("\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21")
        buf.write("\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26")
        buf.write("\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34")
        buf.write("\7\34\u009e\n\34\f\34\16\34\u00a1\13\34\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\35\3\35\3\35\3\35\7\35\u00ac\n\35\f\35\16")
        buf.write("\35\u00af\13\35\3\35\7\35\u00b2\n\35\f\35\16\35\u00b5")
        buf.write("\13\35\3\35\3\35\3\36\6\36\u00ba\n\36\r\36\16\36\u00bb")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\6\37\u00c6\n")
        buf.write("\37\r\37\16\37\u00c7\3 \6 \u00cb\n \r \16 \u00cc\3 \7")
        buf.write(" \u00d0\n \f \16 \u00d3\13 \3!\3!\7!\u00d7\n!\f!\16!\u00da")
        buf.write("\13!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\5\"\u00e7")
        buf.write("\n\"\3#\3#\7#\u00eb\n#\f#\16#\u00ee\13#\5\u009f\u00ad")
        buf.write("\u00d8\2$\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$\3\2\b\5\2\13\f\17\17\"\"\4\2\f\f\17\17\3\2\63;\3\2\62")
        buf.write(";\4\2C\\c|\6\2\62;C\\aac|\u00f8\2\3\3\2\2\2\2\5\3\2\2")
        buf.write("\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2")
        buf.write("\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27")
        buf.write("\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3")
        buf.write("\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2")
        buf.write(")\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2")
        buf.write("\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2")
        buf.write(";\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2")
        buf.write("\2E\3\2\2\2\3G\3\2\2\2\5L\3\2\2\2\7N\3\2\2\2\tP\3\2\2")
        buf.write("\2\13S\3\2\2\2\rU\3\2\2\2\17W\3\2\2\2\21Y\3\2\2\2\23[")
        buf.write("\3\2\2\2\25c\3\2\2\2\27h\3\2\2\2\31l\3\2\2\2\33q\3\2\2")
        buf.write("\2\35w\3\2\2\2\37y\3\2\2\2!{\3\2\2\2#}\3\2\2\2%\177\3")
        buf.write("\2\2\2\'\u0081\3\2\2\2)\u0084\3\2\2\2+\u0086\3\2\2\2-")
        buf.write("\u0089\3\2\2\2/\u008c\3\2\2\2\61\u008f\3\2\2\2\63\u0092")
        buf.write("\3\2\2\2\65\u0095\3\2\2\2\67\u0099\3\2\2\29\u00a7\3\2")
        buf.write("\2\2;\u00b9\3\2\2\2=\u00c2\3\2\2\2?\u00ca\3\2\2\2A\u00d4")
        buf.write("\3\2\2\2C\u00e6\3\2\2\2E\u00e8\3\2\2\2GH\7h\2\2HI\7q\2")
        buf.write("\2IJ\7t\2\2JK\7o\2\2K\4\3\2\2\2LM\7}\2\2M\6\3\2\2\2NO")
        buf.write("\7\177\2\2O\b\3\2\2\2PQ\7k\2\2QR\7h\2\2R\n\3\2\2\2ST\7")
        buf.write("*\2\2T\f\3\2\2\2UV\7+\2\2V\16\3\2\2\2WX\7#\2\2X\20\3\2")
        buf.write("\2\2YZ\7<\2\2Z\22\3\2\2\2[\\\7d\2\2\\]\7q\2\2]^\7q\2\2")
        buf.write("^_\7n\2\2_`\7g\2\2`a\7c\2\2ab\7p\2\2b\24\3\2\2\2cd\7v")
        buf.write("\2\2de\7g\2\2ef\7z\2\2fg\7v\2\2g\26\3\2\2\2hi\7k\2\2i")
        buf.write("j\7p\2\2jk\7v\2\2k\30\3\2\2\2lm\7f\2\2mn\7c\2\2no\7v\2")
        buf.write("\2op\7g\2\2p\32\3\2\2\2qr\7o\2\2rs\7q\2\2st\7p\2\2tu\7")
        buf.write("g\2\2uv\7{\2\2v\34\3\2\2\2wx\7,\2\2x\36\3\2\2\2yz\7\61")
        buf.write("\2\2z \3\2\2\2{|\7-\2\2|\"\3\2\2\2}~\7/\2\2~$\3\2\2\2")
        buf.write("\177\u0080\7>\2\2\u0080&\3\2\2\2\u0081\u0082\7>\2\2\u0082")
        buf.write("\u0083\7?\2\2\u0083(\3\2\2\2\u0084\u0085\7@\2\2\u0085")
        buf.write("*\3\2\2\2\u0086\u0087\7@\2\2\u0087\u0088\7?\2\2\u0088")
        buf.write(",\3\2\2\2\u0089\u008a\7?\2\2\u008a\u008b\7?\2\2\u008b")
        buf.write(".\3\2\2\2\u008c\u008d\7#\2\2\u008d\u008e\7?\2\2\u008e")
        buf.write("\60\3\2\2\2\u008f\u0090\7(\2\2\u0090\u0091\7(\2\2\u0091")
        buf.write("\62\3\2\2\2\u0092\u0093\7~\2\2\u0093\u0094\7~\2\2\u0094")
        buf.write("\64\3\2\2\2\u0095\u0096\t\2\2\2\u0096\u0097\3\2\2\2\u0097")
        buf.write("\u0098\b\33\2\2\u0098\66\3\2\2\2\u0099\u009a\7\61\2\2")
        buf.write("\u009a\u009b\7,\2\2\u009b\u009f\3\2\2\2\u009c\u009e\13")
        buf.write("\2\2\2\u009d\u009c\3\2\2\2\u009e\u00a1\3\2\2\2\u009f\u00a0")
        buf.write("\3\2\2\2\u009f\u009d\3\2\2\2\u00a0\u00a2\3\2\2\2\u00a1")
        buf.write("\u009f\3\2\2\2\u00a2\u00a3\7,\2\2\u00a3\u00a4\7\61\2\2")
        buf.write("\u00a4\u00a5\3\2\2\2\u00a5\u00a6\b\34\2\2\u00a68\3\2\2")
        buf.write("\2\u00a7\u00a8\7\61\2\2\u00a8\u00a9\7\61\2\2\u00a9\u00ad")
        buf.write("\3\2\2\2\u00aa\u00ac\13\2\2\2\u00ab\u00aa\3\2\2\2\u00ac")
        buf.write("\u00af\3\2\2\2\u00ad\u00ae\3\2\2\2\u00ad\u00ab\3\2\2\2")
        buf.write("\u00ae\u00b3\3\2\2\2\u00af\u00ad\3\2\2\2\u00b0\u00b2\n")
        buf.write("\3\2\2\u00b1\u00b0\3\2\2\2\u00b2\u00b5\3\2\2\2\u00b3\u00b1")
        buf.write("\3\2\2\2\u00b3\u00b4\3\2\2\2\u00b4\u00b6\3\2\2\2\u00b5")
        buf.write("\u00b3\3\2\2\2\u00b6\u00b7\b\35\2\2\u00b7:\3\2\2\2\u00b8")
        buf.write("\u00ba\t\4\2\2\u00b9\u00b8\3\2\2\2\u00ba\u00bb\3\2\2\2")
        buf.write("\u00bb\u00b9\3\2\2\2\u00bb\u00bc\3\2\2\2\u00bc\u00bd\3")
        buf.write("\2\2\2\u00bd\u00be\7\60\2\2\u00be\u00bf\t\5\2\2\u00bf")
        buf.write("\u00c0\t\5\2\2\u00c0\u00c1\t\5\2\2\u00c1<\3\2\2\2\u00c2")
        buf.write("\u00c3\5? \2\u00c3\u00c5\7\60\2\2\u00c4\u00c6\t\5\2\2")
        buf.write("\u00c5\u00c4\3\2\2\2\u00c6\u00c7\3\2\2\2\u00c7\u00c5\3")
        buf.write("\2\2\2\u00c7\u00c8\3\2\2\2\u00c8>\3\2\2\2\u00c9\u00cb")
        buf.write("\4\63;\2\u00ca\u00c9\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc")
        buf.write("\u00ca\3\2\2\2\u00cc\u00cd\3\2\2\2\u00cd\u00d1\3\2\2\2")
        buf.write("\u00ce\u00d0\4\62;\2\u00cf\u00ce\3\2\2\2\u00d0\u00d3\3")
        buf.write("\2\2\2\u00d1\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2@")
        buf.write("\3\2\2\2\u00d3\u00d1\3\2\2\2\u00d4\u00d8\7$\2\2\u00d5")
        buf.write("\u00d7\13\2\2\2\u00d6\u00d5\3\2\2\2\u00d7\u00da\3\2\2")
        buf.write("\2\u00d8\u00d9\3\2\2\2\u00d8\u00d6\3\2\2\2\u00d9\u00db")
        buf.write("\3\2\2\2\u00da\u00d8\3\2\2\2\u00db\u00dc\7$\2\2\u00dc")
        buf.write("B\3\2\2\2\u00dd\u00de\7v\2\2\u00de\u00df\7t\2\2\u00df")
        buf.write("\u00e0\7w\2\2\u00e0\u00e7\7g\2\2\u00e1\u00e2\7h\2\2\u00e2")
        buf.write("\u00e3\7c\2\2\u00e3\u00e4\7n\2\2\u00e4\u00e5\7u\2\2\u00e5")
        buf.write("\u00e7\7g\2\2\u00e6\u00dd\3\2\2\2\u00e6\u00e1\3\2\2\2")
        buf.write("\u00e7D\3\2\2\2\u00e8\u00ec\t\6\2\2\u00e9\u00eb\t\7\2")
        buf.write("\2\u00ea\u00e9\3\2\2\2\u00eb\u00ee\3\2\2\2\u00ec\u00ea")
        buf.write("\3\2\2\2\u00ec\u00ed\3\2\2\2\u00edF\3\2\2\2\u00ee\u00ec")
        buf.write("\3\2\2\2\r\2\u009f\u00ad\u00b3\u00bb\u00c7\u00cc\u00d1")
        buf.write("\u00d8\u00e6\u00ec\3\2\3\2")
        return buf.getvalue()


class QLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    WHITESPACE = 26
    COMMENT = 27
    LINE_COMMENT = 28
    MONEY = 29
    DECIMAL = 30
    INT = 31
    STR = 32
    BOOL = 33
    IDENTIFIER = 34

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'form'", "'{'", "'}'", "'if'", "'('", "')'", "'!'", "':'", 
            "'boolean'", "'text'", "'int'", "'date'", "'money'", "'*'", 
            "'/'", "'+'", "'-'", "'<'", "'<='", "'>'", "'>='", "'=='", "'!='", 
            "'&&'", "'||'" ]

    symbolicNames = [ "<INVALID>",
            "WHITESPACE", "COMMENT", "LINE_COMMENT", "MONEY", "DECIMAL", 
            "INT", "STR", "BOOL", "IDENTIFIER" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "WHITESPACE", 
                  "COMMENT", "LINE_COMMENT", "MONEY", "DECIMAL", "INT", 
                  "STR", "BOOL", "IDENTIFIER" ]

    grammarFileName = "QL.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


