grammar org.uva.sc.cr.qsl.QSL with org.uva.sc.cr.ql.QL

generate qSL "http://www.uva.org/sc/cr/qsl/QSL"
import "http://www.uva.org/sc/cr/ql/QL"

Model:
	form=Form
	(stylesheet=Stylesheet)?;

Stylesheet:
	'stylesheet' name=ID
	pages+=Page*;

Page:
	'page' name=ID '{'
	sections+=Section*
	defaultStyles+=DefaultStyle*
	'}';

Section:
	SectionShort | SectionExtended;

SectionExtended returns Section:
	'section' name=STRING '{'
	questions+=QuestionReference*
	sections+=Section*
	defaultStyles+=DefaultStyle*
	'}';

SectionShort returns Section:
	'section' name=STRING questions+=QuestionReference*;

QuestionReference:
	'question' question=[Question] (widget=Widget)?;

Widget:
	'widget' (WidgetSpinbox | WidgetCheckbox | WidgetSlider | WidgetText | WidgetRadio | WidgetDropdown);

WidgetSpinbox:
	type='spinbox';

WidgetCheckbox:
	type='checkbox';

WidgetSlider:
	type='slider';

WidgetText:
	type='text';

WidgetRadio:
	type='radio' '(' option1=STRING ',' option2=STRING ')';

WidgetDropdown:
	type='dropdown' '(' option1=STRING ',' option2=STRING ')';

DefaultStyle:
	DefaultStyleShort | DefaultStyleExtended;

DefaultStyleShort returns DefaultStyle:
	'default' questionType=QuestionType widget=Widget;

DefaultStyleExtended returns DefaultStyle:
	'default' questionType=QuestionType '{'
	styles+=StyleAttribute*
	widget=Widget
	'}';

StyleAttribute:
	StyleAttributeWidth | StyleAttributeFont | StyleAttributeFontSize | StyleAttributeColor;

StyleAttributeWidth returns StyleAttribute:
	{StyleAttributeWidth} 'width' ':' value=INT;

StyleAttributeFont returns StyleAttribute:
	{StyleAttributeFont} 'font' ':' value=STRING;

StyleAttributeFontSize returns StyleAttribute:
	{StyleAttributeFontSize} 'fontsize' ':' value=INT;

StyleAttributeColor returns StyleAttribute:
	{StyleAttributeColor} 'color' ':' value=HEX;

terminal HEX:
	'#'+ ('a'..'f' | 'A'..'F' | '0'..'9')*;
