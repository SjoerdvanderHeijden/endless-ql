grammar org.uva.sc.pc.qls.QSLang with org.uva.sc.pc.ql.QLang

generate qSLang "http://www.uva.org/sc/pc/qls/QSLang"

import "http://www.uva.org/sc/pc/ql/QLang"

Model:
	form = Form
	(stylesheet=Stylesheet)?
;

Stylesheet:
	'stylesheet' name=ID
	(pages+=Page)*
;

Page:
	'page' name=ID '{'
        (elements+=BlockElement)*
	'}'
;
	
Section:
	SectionShort | SectionExtended
;

SectionExtended returns Section:
	'section' name=STRING '{'
        (elements+=BlockElement)*
    '}'
;

SectionShort returns Section:
	'section' name=STRING question=QuestionRef
;

BlockElement:
	QuestionRef | Section | DefaultTypeStyle
;

QuestionRef: 
	'question' question=[Question] (widget=Widget)?
;

Widget:
	'widget' (YesNoRadioWidget | YesNoDropdownWidget | SpinboxWidget | CheckboxWidget| SliderWidget | TextWidget)
;

SpinboxWidget:
	type='spinbox'
;

CheckboxWidget: 
	type='checkbox'
;

SliderWidget: 
	type='slider'
;

TextWidget:
	type='text'
;
	
YesNoRadioWidget:
	type='radio' '(' option1=WidgetOption ',' option2=WidgetOption ')'
;

YesNoDropdownWidget:
	type='dropdown' '(' option1=WidgetOption ',' option2=WidgetOption ')'
;

WidgetOption: 
	name=STRING
;

DefaultTypeStyle:
	DefaultTypeStyleShort | DefaultTypeStyleExtended
;

DefaultTypeStyleShort returns DefaultTypeStyle:
	'default' type=QuestionType (widget=Widget)?
;
	
DefaultTypeStyleExtended returns DefaultTypeStyle:
	'default' type=QuestionType '{'
		(styles+=StyleAttribute)*
		widget=Widget
	'}'
;

StyleAttribute:
	WidthStylingAttribute | FontStylingAttribute | FontSizeStylingAttribute | ColorStylingAttribute
;
 
WidthStylingAttribute returns StyleAttribute:
	'width' ':' width=INT
;

FontStylingAttribute returns StyleAttribute:
	'font' ':' font=STRING
;

FontSizeStylingAttribute returns StyleAttribute:
	'fontsize' ':' size=INT
;

ColorStylingAttribute returns StyleAttribute:
	'color' ':' value=HEX
;

terminal HEX: '#'+('a'..'f' | 'A'..'F' | '0'..'9')*;
